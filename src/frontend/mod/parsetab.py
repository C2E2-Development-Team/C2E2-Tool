
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E70B24C75CE9B0B6DA7D05C48FD907E5'
    
_lr_action_items = {'COMMA':([14,30,32,35,36,37,38,40,45,51,52,54,55,56,57,58,],[24,-31,-35,-38,-34,46,-37,50,-36,-33,-32,-39,-29,-30,59,-40,]),'FUNC':([23,33,34,41,42,43,47,48,],[31,31,31,31,31,31,31,31,]),'EQUALS':([14,],[23,]),'EXIT':([1,3,4,6,7,9,13,14,15,16,17,22,24,25,26,27,30,32,35,36,37,38,45,46,49,51,52,54,55,56,58,],[-2,-2,-5,11,-8,-4,-7,-28,-20,-22,-3,-6,-27,-26,-19,-21,-31,-35,-38,-34,-25,-37,-36,-24,-23,-33,-32,-39,-29,-30,-40,]),'$end':([1,2,3,4,6,7,9,10,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,35,36,37,38,39,45,46,49,51,52,54,55,56,57,58,61,62,63,],[-2,0,-2,-5,-2,-8,-4,-11,-2,-7,-28,-20,-22,-3,-10,-14,-1,-6,-27,-26,-19,-21,-9,-13,-31,-35,-38,-34,-25,-37,-12,-36,-24,-23,-33,-32,-39,-29,-30,-18,-40,-17,-16,-15,]),'IDENTIFIER':([0,9,13,14,15,16,18,23,24,25,29,30,32,33,34,35,36,37,38,41,42,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,],[1,14,14,-28,14,14,14,32,-27,-26,40,-31,-35,32,32,-38,-34,-25,-37,32,32,32,-36,-24,32,32,-23,57,-33,-32,-39,-29,-30,40,-40,40,40,]),'LPAREN':([23,31,33,34,41,42,43,47,48,],[33,43,33,33,33,33,33,33,33,]),'DURING':([1,3,4,9,14,15,16,17,24,25,26,27,30,32,35,36,37,38,45,46,49,51,52,54,55,56,58,],[-2,8,-5,-4,-28,-20,-22,-3,-27,-26,-19,-21,-31,-35,-38,-34,-25,-37,-36,-24,-23,-33,-32,-39,-29,-30,-40,]),'COLON':([5,8,11,21,],[9,13,18,29,]),'TIMES':([30,32,35,36,38,45,51,52,54,55,56,58,],[42,-35,-38,-34,-37,-36,-33,-32,-39,42,42,-40,]),'SEMICOLON':([14,30,32,35,36,37,38,45,51,52,54,55,56,57,58,],[25,-31,-35,-38,-34,49,-37,-36,-33,-32,-39,-29,-30,60,-40,]),'INTEGER':([23,33,34,41,42,43,47,48,],[35,35,35,35,35,35,35,35,]),'BIND':([1,3,4,6,7,9,10,12,13,14,15,16,17,18,22,24,25,26,27,28,30,32,35,36,37,38,45,46,49,51,52,54,55,56,58,],[-2,-2,-5,-2,-8,-4,-11,21,-7,-28,-20,-22,-3,-10,-6,-27,-26,-19,-21,-9,-31,-35,-38,-34,-25,-37,-36,-24,-23,-33,-32,-39,-29,-30,-40,]),'PLUS':([30,32,35,36,37,38,44,45,51,52,53,54,55,56,58,],[-31,-35,-38,-34,47,-37,47,-36,-33,-32,47,-39,-29,-30,-40,]),'MINUS':([23,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,51,52,53,54,55,56,58,],[34,-31,-35,34,34,-38,-34,48,-37,34,34,34,48,-36,34,34,-33,-32,48,-39,-29,-30,-40,]),'ENTRY':([1,],[5,]),'FLOAT':([23,33,34,41,42,43,47,48,],[38,38,38,38,38,38,38,38,]),'RPAREN':([30,32,35,36,38,44,45,51,52,53,54,55,56,58,],[-31,-35,-38,-34,-37,54,-36,-33,-32,58,-39,-29,-30,-40,]),'DIVIDE':([30,32,35,36,38,45,51,52,54,55,56,58,],[41,-35,-38,-34,-37,-36,-33,-32,-39,41,41,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'entry':([1,],[3,]),'BCast':([9,13,15,16,18,],[16,16,16,16,16,]),'binds':([29,57,59,60,],[39,61,62,63,]),'during':([3,],[6,]),'exit':([6,],[12,]),'factor':([23,33,34,41,42,43,47,48,],[36,36,45,51,52,36,36,36,]),'empty':([1,3,6,12,],[4,7,10,19,]),'Assgn':([9,13,15,16,18,],[15,15,15,15,15,]),'Exprs':([9,13,15,16,18,],[17,22,26,27,28,]),'expr':([23,33,43,],[37,44,53,]),'bind':([12,],[20,]),'Action':([0,],[2,]),'term':([23,33,43,47,48,],[30,30,30,55,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Action","S'",1,None,None,None),
  ('Action -> IDENTIFIER entry during exit bind','Action',5,'p_Action','ModeParse.py',115),
  ('empty -> <empty>','empty',0,'p_empty','ModeParse.py',119),
  ('entry -> ENTRY COLON Exprs','entry',3,'p_entry','ModeParse.py',123),
  ('entry -> ENTRY COLON','entry',2,'p_entry','ModeParse.py',124),
  ('entry -> empty','entry',1,'p_entry','ModeParse.py',125),
  ('during -> DURING COLON Exprs','during',3,'p_during','ModeParse.py',132),
  ('during -> DURING COLON','during',2,'p_during','ModeParse.py',133),
  ('during -> empty','during',1,'p_during','ModeParse.py',134),
  ('exit -> EXIT COLON Exprs','exit',3,'p_exit','ModeParse.py',141),
  ('exit -> EXIT COLON','exit',2,'p_exit','ModeParse.py',142),
  ('exit -> empty','exit',1,'p_exit','ModeParse.py',143),
  ('bind -> BIND COLON binds','bind',3,'p_bind','ModeParse.py',150),
  ('bind -> BIND COLON','bind',2,'p_bind','ModeParse.py',151),
  ('bind -> empty','bind',1,'p_bind','ModeParse.py',152),
  ('binds -> IDENTIFIER COMMA IDENTIFIER SEMICOLON binds','binds',5,'p_binds','ModeParse.py',159),
  ('binds -> IDENTIFIER COMMA IDENTIFIER COMMA binds','binds',5,'p_binds','ModeParse.py',160),
  ('binds -> IDENTIFIER COMMA IDENTIFIER binds','binds',4,'p_binds','ModeParse.py',161),
  ('binds -> IDENTIFIER COMMA IDENTIFIER','binds',3,'p_binds','ModeParse.py',162),
  ('Exprs -> Assgn Exprs','Exprs',2,'p_Exprs','ModeParse.py',171),
  ('Exprs -> Assgn','Exprs',1,'p_Exprs','ModeParse.py',172),
  ('Exprs -> BCast Exprs','Exprs',2,'p_Exprs','ModeParse.py',173),
  ('Exprs -> BCast','Exprs',1,'p_Exprs','ModeParse.py',174),
  ('Assgn -> IDENTIFIER EQUALS expr SEMICOLON','Assgn',4,'p_Assgn','ModeParse.py',181),
  ('Assgn -> IDENTIFIER EQUALS expr COMMA','Assgn',4,'p_Assgn','ModeParse.py',182),
  ('Assgn -> IDENTIFIER EQUALS expr','Assgn',3,'p_Assgn','ModeParse.py',183),
  ('BCast -> IDENTIFIER SEMICOLON','BCast',2,'p_BCast','ModeParse.py',187),
  ('BCast -> IDENTIFIER COMMA','BCast',2,'p_BCast','ModeParse.py',188),
  ('BCast -> IDENTIFIER','BCast',1,'p_BCast','ModeParse.py',189),
  ('expr -> expr PLUS term','expr',3,'p_expr','ModeParse.py',193),
  ('expr -> expr MINUS term','expr',3,'p_expr','ModeParse.py',194),
  ('expr -> term','expr',1,'p_expr','ModeParse.py',195),
  ('term -> term TIMES factor','term',3,'p_term','ModeParse.py',202),
  ('term -> term DIVIDE factor','term',3,'p_term','ModeParse.py',203),
  ('term -> factor','term',1,'p_term','ModeParse.py',204),
  ('factor -> IDENTIFIER','factor',1,'p_factor','ModeParse.py',211),
  ('factor -> MINUS factor','factor',2,'p_factor','ModeParse.py',212),
  ('factor -> FLOAT','factor',1,'p_factor','ModeParse.py',213),
  ('factor -> INTEGER','factor',1,'p_factor','ModeParse.py',214),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','ModeParse.py',215),
  ('factor -> FUNC LPAREN expr RPAREN','factor',4,'p_factor','ModeParse.py',216),
]
